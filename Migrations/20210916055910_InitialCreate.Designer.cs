// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepoWebAPI.Objects;

namespace RepoWebAPI.Migrations
{
    [DbContext(typeof(CoinMarketCapQuoteDbContext))]
    [Migration("20210916055910_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RepoWebAPI.Entities.CoinMarketCapQuote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CirculatingSupply")
                        .HasColumnType("float");

                    b.Property<long>("CmcRank")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("IsActive")
                        .HasColumnType("bigint");

                    b.Property<long>("IsFiat")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("MaxSupply")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NumMarketPairs")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuoteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalSupply")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("CoinMarketCapQuote");
                });

            modelBuilder.Entity("RepoWebAPI.Entities.Dkk", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FullyDilutedMarketCap")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MarketCap")
                        .HasColumnType("float");

                    b.Property<double>("MarketCapDominance")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange1H")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange24H")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange30D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange60D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange7D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange90D")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Volume24H")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Dkk");
                });

            modelBuilder.Entity("RepoWebAPI.Entities.Eur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FullyDilutedMarketCap")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MarketCap")
                        .HasColumnType("float");

                    b.Property<double>("MarketCapDominance")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange1H")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange24H")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange30D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange60D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange7D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange90D")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Volume24H")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Eur");
                });

            modelBuilder.Entity("RepoWebAPI.Entities.Quote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DkkId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EurId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsdId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ZarId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DkkId");

                    b.HasIndex("EurId");

                    b.HasIndex("UsdId");

                    b.HasIndex("ZarId");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("RepoWebAPI.Entities.Usd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FullyDilutedMarketCap")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MarketCap")
                        .HasColumnType("float");

                    b.Property<double>("MarketCapDominance")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange1H")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange24H")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange30D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange60D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange7D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange90D")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Volume24H")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Usd");
                });

            modelBuilder.Entity("RepoWebAPI.Entities.Zar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FullyDilutedMarketCap")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MarketCap")
                        .HasColumnType("float");

                    b.Property<double>("MarketCapDominance")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange1H")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange24H")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange30D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange60D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange7D")
                        .HasColumnType("float");

                    b.Property<double>("PercentChange90D")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Volume24H")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Zar");
                });

            modelBuilder.Entity("RepoWebAPI.Entities.CoinMarketCapQuote", b =>
                {
                    b.HasOne("RepoWebAPI.Entities.Quote", "Quote")
                        .WithMany()
                        .HasForeignKey("QuoteId");

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("RepoWebAPI.Entities.Quote", b =>
                {
                    b.HasOne("RepoWebAPI.Entities.Dkk", "Dkk")
                        .WithMany()
                        .HasForeignKey("DkkId");

                    b.HasOne("RepoWebAPI.Entities.Eur", "Eur")
                        .WithMany()
                        .HasForeignKey("EurId");

                    b.HasOne("RepoWebAPI.Entities.Usd", "Usd")
                        .WithMany()
                        .HasForeignKey("UsdId");

                    b.HasOne("RepoWebAPI.Entities.Zar", "Zar")
                        .WithMany()
                        .HasForeignKey("ZarId");

                    b.Navigation("Dkk");

                    b.Navigation("Eur");

                    b.Navigation("Usd");

                    b.Navigation("Zar");
                });
#pragma warning restore 612, 618
        }
    }
}
